// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
}

model JobPost {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  position    String  
  salary      Float
  experience  Int
  location    String
  createdAt   DateTime  @default(now())
  // Define the relationship with JobPostReqSkills
  requiredSkills JobPostReqSkills[]
}

model Skills {
  id   Int    @id @default(autoincrement())
  name String @unique
  // Define the relationship with JobPostReqSkills
  jobPostReqSkills JobPostReqSkills[]
}

model JobPostReqSkills {
  id        Int     @id @default(autoincrement())
  jobPostId Int
  skillId   Int
  // Establish the foreign key relationships
  jobPost   JobPost @relation(fields: [jobPostId], references: [id], onDelete: Cascade)
  skill     Skills  @relation(fields: [skillId], references: [id], onDelete: Cascade)

  // Composite index for ensuring unique jobPost-skill pairs
  @@unique([jobPostId, skillId])
}
